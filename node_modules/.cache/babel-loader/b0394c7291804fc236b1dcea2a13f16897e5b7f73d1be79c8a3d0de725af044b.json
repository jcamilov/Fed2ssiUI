{"ast":null,"code":"var _jsxFileName = \"/home/jota/FED2SSI/policymanager/src/components/PolicySelection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport TemplateContext from \"../contexts/TemplateContext\";\nimport templatesFromJson from \"./../config/templates.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PolicySelection() {\n  _s();\n  const {\n    currentTemplate,\n    setTheCurrentTemplate\n  } = useContext(TemplateContext);\n  const [plantillaList, setPlantillaList] = useState(\"\");\n  const onClick = e => {\n    // templateList.map((template) => {});\n    // if (e.target.value === 0) {\n    //   setTheCurrentTemplate(\"select a template...\");\n    // } else {\n    //   setTheCurrentTemplate(e.target.value);\n    //   console.log(e.target.value + \" was clicked!\");\n    // }\n  };\n  const getTemplates = () => {\n    templatesFromJson.map(template => {\n      for (const [templateName, parametersObject] of Object.entries(template)) {\n        console.log(templateName);\n        // setTemplateList((oldArray) => [...oldArray, templateName]);\n      }\n    });\n  };\n\n  useEffect(() => {\n    templatesFromJson.map(template => {\n      for (const templateName of Object.keys(template)) {\n        console.log(templateName);\n        // setTemplateList((templateList) => [...templateList, templateName]);\n        setPlantillaList(templateName);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"dropdown\",\n      id: \"templates\",\n      value: currentTemplate,\n      onChange: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"Select a template...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"template 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"template 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PolicySelection, \"be2jj6YrotC37MpYDEEj4Om6H1A=\");\n_c = PolicySelection;\nexport default PolicySelection;\nvar _c;\n$RefreshReg$(_c, \"PolicySelection\");","map":{"version":3,"names":["React","useContext","useState","useEffect","TemplateContext","templatesFromJson","PolicySelection","currentTemplate","setTheCurrentTemplate","plantillaList","setPlantillaList","onClick","e","getTemplates","map","template","templateName","parametersObject","Object","entries","console","log","keys"],"sources":["/home/jota/FED2SSI/policymanager/src/components/PolicySelection.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport TemplateContext from \"../contexts/TemplateContext\";\nimport templatesFromJson from \"./../config/templates.json\";\n\nfunction PolicySelection() {\n  const { currentTemplate, setTheCurrentTemplate } =\n    useContext(TemplateContext);\n\n  const [plantillaList, setPlantillaList] = useState(\"\");\n\n  const onClick = (e) => {\n    // templateList.map((template) => {});\n    // if (e.target.value === 0) {\n    //   setTheCurrentTemplate(\"select a template...\");\n    // } else {\n    //   setTheCurrentTemplate(e.target.value);\n    //   console.log(e.target.value + \" was clicked!\");\n    // }\n  };\n\n  const getTemplates = () => {\n    templatesFromJson.map((template) => {\n      for (const [templateName, parametersObject] of Object.entries(template)) {\n        console.log(templateName);\n        // setTemplateList((oldArray) => [...oldArray, templateName]);\n      }\n    });\n  };\n\n  useEffect(() => {\n    templatesFromJson.map((template) => {\n      for (const templateName of Object.keys(template)) {\n        console.log(templateName);\n        // setTemplateList((templateList) => [...templateList, templateName]);\n        setPlantillaList(templateName);\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      <select\n        className=\"dropdown\"\n        id=\"templates\"\n        value={currentTemplate}\n        onChange={onClick}\n      >\n        <option value=\"0\">Select a template...</option>\n        {/* {templateList.map((template) => {\n          <option value={template}>{template}</option>;\n        })} */}\n        <option value=\"1\">template 1</option>;\n        <option value=\"2\">template 2</option>;\n      </select>\n    </div>\n  );\n}\n\nexport default PolicySelection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,iBAAiB,MAAM,4BAA4B;AAAC;AAE3D,SAASC,eAAe,GAAG;EAAA;EACzB,MAAM;IAAEC,eAAe;IAAEC;EAAsB,CAAC,GAC9CP,UAAU,CAACG,eAAe,CAAC;EAE7B,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,OAAO,GAAIC,CAAC,IAAK;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBR,iBAAiB,CAACS,GAAG,CAAEC,QAAQ,IAAK;MAClC,KAAK,MAAM,CAACC,YAAY,EAAEC,gBAAgB,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;QACvEK,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;QACzB;MACF;IACF,CAAC,CAAC;EACJ,CAAC;;EAEDb,SAAS,CAAC,MAAM;IACdE,iBAAiB,CAACS,GAAG,CAAEC,QAAQ,IAAK;MAClC,KAAK,MAAMC,YAAY,IAAIE,MAAM,CAACI,IAAI,CAACP,QAAQ,CAAC,EAAE;QAChDK,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;QACzB;QACAN,gBAAgB,CAACM,YAAY,CAAC;MAChC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACE;MACE,SAAS,EAAC,UAAU;MACpB,EAAE,EAAC,WAAW;MACd,KAAK,EAAET,eAAgB;MACvB,QAAQ,EAAEI,OAAQ;MAAA,wBAElB;QAAQ,KAAK,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA8B,eAI/C;QAAQ,KAAK,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,oBACrC;QAAQ,KAAK,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IAAA;MAAA;MAAA;MAAA;IAAA;EAC9B;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GApDQL,eAAe;AAAA,KAAfA,eAAe;AAsDxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}